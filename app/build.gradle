apply plugin: Plugins.ANDROID_APPLICATION
apply plugin: Plugins.KOTLIN_ANDROID
apply plugin: Plugins.KOTLIN_KAPT

android {
    compileSdkVersion Versions.TARGET_SDK_VERSION
    defaultConfig {
        applicationId Config.APPLICATION_ID
        minSdkVersion Versions.MIN_SDK_VERSION
        targetSdkVersion Versions.TARGET_SDK_VERSION
        versionCode Versions.APP_VERSION_CODE
        versionName Versions.APP_VERSION_NAME
        buildConfigField("String", "BUILD_DATE", "\"${new Date().format("yyyy-MM-dd")}\"")
        vectorDrawables.useSupportLibrary = true
    }
    compileOptions {
        sourceCompatibility Versions.JAVA
        targetCompatibility Versions.JAVA
    }
    kotlinOptions {
        jvmTarget = Versions.JAVA.toString()
    }
    signingConfigs {
        internal {
            keyAlias Config.KEY_STORE_INTERNAL_KEY_ALIAS
            keyPassword Config.KEY_STORE_INTERNAL_KEY_PASSWORD
            storeFile file(Config.KEY_STORE_INTERNAL_FILE)
            storePassword Config.KEY_STORE_INTERNAL_STORE_PASSWORD
        }
        release {
            keyAlias Config.KEY_STORE_RELEASE_KEY_ALIAS
            keyPassword Config.KEY_STORE_RELEASE_KEY_PASSWORD
            storeFile file(Config.KEY_STORE_RELEASE_FILE)
            storePassword Config.KEY_STORE_RELEASE_STORE_PASSWORD
        }
    }
    buildFeatures {
        dataBinding = true
    }
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            multiDexEnabled true
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            signingConfig signingConfigs.internal
        }
        internal {
            debuggable false
            minifyEnabled true
            shrinkResources true
            multiDexEnabled false
            applicationIdSuffix ".internal"
            versionNameSuffix "-internal"
            signingConfig signingConfigs.internal
            proguardFiles getDefaultProguardFile(Config.PROGUARD_DEFAULT), Config.PROGUARD_RULES
            matchingFallbacks = ["debug"]
        }
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            multiDexEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile(Config.PROGUARD_DEFAULT), Config.PROGUARD_RULES
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Module dependencies
    implementation project(Modules.DEBUG_MENU)
    implementation project(Modules.DATA_MODEL)
    implementation project(Modules.DATA_REPOSITORY)
    implementation project(Modules.DOMAIN)
    implementation project(Modules.PRESENTATION)

    // Service locator
    implementation Dependencies.KOIN
    implementation Dependencies.KOIN_VIEW_MODEL

    // UI
    implementation Dependencies.APP_COMPAT
    implementation Dependencies.MATERIAL_COMPONENTS
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = Versions.JAVA.toString()
        freeCompilerArgs = [Config.COMPILER_ARGUMENTS]
    }
}