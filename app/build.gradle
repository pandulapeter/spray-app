apply plugin: Plugins.ANDROID_APPLICATION
apply from: "$rootDir${BaseModules.ANDROID}"
apply plugin: Plugins.KOTLIN_KAPT

android {
    defaultConfig {
        applicationId Config.APPLICATION_ID
        versionCode Versions.APP_VERSION_CODE
        versionName Versions.APP_VERSION_NAME
        buildConfigField("String", "BUILD_DATE", "\"${new Date().format("yyyy-MM-dd")}\"")
        vectorDrawables.useSupportLibrary = true
    }
    signingConfigs {
        internal {
            keyAlias Config.KEY_STORE_INTERNAL_KEY_ALIAS
            keyPassword Config.KEY_STORE_INTERNAL_KEY_PASSWORD
            storeFile file(Config.KEY_STORE_INTERNAL_FILE)
            storePassword Config.KEY_STORE_INTERNAL_STORE_PASSWORD
        }
        release {
            keyAlias Config.KEY_STORE_RELEASE_KEY_ALIAS
            keyPassword Config.KEY_STORE_RELEASE_KEY_PASSWORD
            storeFile file(Config.KEY_STORE_RELEASE_FILE)
            storePassword Config.KEY_STORE_RELEASE_STORE_PASSWORD
        }
    }
    buildFeatures.dataBinding = true
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            multiDexEnabled true
            zipAlignEnabled false
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            signingConfig signingConfigs.internal
        }
        internal {
            debuggable false
            minifyEnabled true
            shrinkResources true
            multiDexEnabled false
            zipAlignEnabled true
            applicationIdSuffix ".internal"
            versionNameSuffix "-internal"
            signingConfig signingConfigs.internal
            proguardFiles getDefaultProguardFile(Config.PROGUARD_DEFAULT), Config.PROGUARD_RULES
            matchingFallbacks = ["debug"]
        }
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            multiDexEnabled false
            zipAlignEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile(Config.PROGUARD_DEFAULT), Config.PROGUARD_RULES
        }
    }
}

dependencies {

    // Service locator
    implementation Dependencies.KOIN
    implementation Dependencies.KOIN_ANDROID
    implementation Dependencies.COROUTINES

    // Module dependencies
    implementation project(Modules.DATA_SOURCE_LOCAL)
    implementation project(Modules.DATA_SOURCE_REMOTE)
    implementation project(Modules.DATA_SOURCE_LOCAL_IMPL)
    implementation project(Modules.DATA_SOURCE_REMOTE_IMPL)
    implementation project(Modules.DATA_REPOSITORY)
    implementation project(Modules.DOMAIN)
    implementation project(Modules.PRESENTATION_MAIN)
    implementation project(Modules.PRESENTATION_TUTORIAL)
    implementation project(Modules.PRESENTATION_WORK)
    implementation project(Modules.PRESENTATION_STATISTICS)
    implementation project(Modules.PRESENTATION_HELP)
    implementation project(Modules.PRESENTATION_DEBUG_MENU)

    // UI
    implementation Dependencies.APP_COMPAT
    implementation Dependencies.MATERIAL_COMPONENTS
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = Versions.JAVA.toString()
        freeCompilerArgs = [Config.COMPILER_ARGUMENTS]
    }
}